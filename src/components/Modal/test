import React, { useState } from "react";

export const EditSalarySlipModal = ({ salarySlipId, onClose }) => {
  const [formData, setFormData] = useState({
    salary: 0,
    netPay: 0,
    prorate: false,
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    const apiUrl = `http://localhost:3000/api/v1/salary_slips/${salarySlipId}.json`;

    const token = "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo3ODYsImV4cCI6MTcwMjU5NjQxMX0.yEXHfnqOUcJ0aqXUZxTxFDeO2VzOM4H_5GsK_tFdwWM";

    const requestOptions = {
      method: "PUT", // or "POST" based on your requirement
      headers: {
        "Content-Type": "application/json",
        Authorization: token,
      },
      body: JSON.stringify({
        payload: formData,
      }),
    };

    try {
      const response = await fetch(apiUrl, requestOptions);
      if (response.ok) {
        // Handle success (e.g., close the modal)
        onClose();
      } else {
        // Handle error
        console.error("Error:", response.status, response.statusText);
      }
    } catch (error) {
      console.error("Error:", error);
    }
  };

  return (
    <>
      {/* Your existing modal code */}

      <form onSubmit={handleSubmit}>
        {/* Your existing form inputs */}
        <label htmlFor="salary">Salary</label>
        <input
          name="salary"
          type="text"
          className="form-control"
          value={formData.salary}
          onChange={handleChange}
          required
        />

        <label htmlFor="netPay">Net Pay</label>
        <input
          name="netPay"
          type="text"
          className="form-control"
          value={formData.netPay}
          onChange={handleChange}
          required
        />

        <label htmlFor="prorate">Prorate</label>
        <input
          name="prorate"
          type="text"
          className="form-control"
          value={formData.prorate}
          onChange={handleChange}
          required
        />

        <div className="modal-footer">
          <button
            type="button"
            className="btn btn-secondary"
            onClick={onClose}
          >
            Cancel
          </button>
          <button type="submit" className="btn btn-primary">
            Edit
          </button>
        </div>
      </form>
    </>
  );
};
