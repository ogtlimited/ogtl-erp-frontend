name: OGTL-ERP-FRONTEND

on:
  push:
    branches:
    - dev
    - main
    - '**'
  pull_request:
    branches:
    - dev
    - main
    - '**'

jobs:
  build-and-deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install dependencies
      run: npm install

    - name: Create env
      if: endsWith(github.ref, '/dev')
      env:
        REACT_APP_HMAC_SECRET: ${{ secrets.REACT_APP_HMAC_SECRET }}
        REACT_APP_KPI_APP_URL: ${{ secrets.REACT_APP_KPI_APP_URL }}
  
      run: |
        touch .env
        echo REACT_APP_HMAC_SECRET="$REACT_APP_HMAC_SECRET" >> .env
        echo REACT_APP_KPI_APP_URL="$REACT_APP_KPI_APP_URL" >> .env

        pwd 
        ls -la .
        cat .env

    - name: Build
      run: CI=false npm run build

    - name: Deploy
      if: endsWith(github.ref, '/dev')
      run: |
        echo "deploying to dev"
        aws s3 sync ./build s3://ogtl-erp-test
        
    - name: Prod
      if: endsWith(github.ref, '/main')
      run: |
        echo "deploying to production"
        aws s3 sync ./build s3://ogtl-erp-frontend
        sleep 10
        aws cloudfront create-invalidation --distribution-id E301WD6BY9YF54 --paths "/*"
        
    - name: Slack Notification
      uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#everyone'
      env:
        TOKEN: ${{ secrets.TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
